/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

plugins {
    id 'idea'
    id 'signing'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.7.5'
}
ext {
    springbootVersion = "2.4.5"
    repourl = "http://nexus.lgt.org/repository"
}
allprojects {
    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven {
            allowInsecureProtocol(true)
            url "$repourl/maven-public/"
        }
    }
    version = '1.0.0' + (project.property('snapshot') == "true" ? "-SNAPSHOT" : "")
}
subprojects {
    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
    configurations.all {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-log4j2:$springbootVersion"
        implementation "com.lmax:disruptor:3.4.2"
        implementation 'com.google.guava:guava:28.2-jre'
        implementation 'commons-beanutils:commons-beanutils:1.9.4'

        // Use JUnit test framework
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    }
    java {

        withJavadocJar()
        withSourcesJar()
    }
    test {
        useJUnitPlatform()
    }

    publishing {
        publications {
            novel(MavenPublication) {
                groupId = 'com.lgt'
                from components.java
            }
        }
        repositories {
            maven {
                name = "maven_lgt"
                def releaseUri = "$repourl/maven-releases/"
                def snapshotUri = "$repourl/maven-snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotUri : releaseUri
                allowInsecureProtocol(true)
                credentials {
                    username = "admin"
                    password = mavenLgtPsw
                }

            }

        }

    }
    signing {
        if (!project.property('snapshot')) {
            sign configurations.archives
        }
    }
    javadoc {
        options.encoding = "UTF-8"
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }
}
